networks:
  app-network:
    driver: bridge

volumes:
  pgdata:

services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: BmbPlatformDb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  ApiGateway:
    build:
      context: ./ApiGateway
      dockerfile: ApiGateway/Dockerfile  
    networks:
      - app-network
    ports:
      - "5002:5002"

  ProductService:
    build:
      context: ./ProductService
      dockerfile: ProductService/Dockerfile  
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Database=BmbPlatformDb;Username=postgres;Password=123

    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_started
    ports:
      - "5000:5000"

  OrderService:
    build:
      context: ./OrderService
      dockerfile: OrderService/Dockerfile 
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Database=BmbPlatformDb;Username=postgres;Password=123
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_started
    ports:
      - "5001:5001"

          
  BmbPlatformUI:
    build:
      context: ./BmbPlatformUI
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - ProductService
      - OrderService

      